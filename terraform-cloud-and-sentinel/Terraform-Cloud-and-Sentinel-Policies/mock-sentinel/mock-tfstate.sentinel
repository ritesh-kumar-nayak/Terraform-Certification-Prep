import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {
			"aws_ami": {
				"amazon_linux_ami": {
					0: {
						"attr": {
							"architecture": "x86_64",
							"arn":          "arn:aws:ec2:us-east-1::image/ami-00d4cdb3bda21c6ed",
							"block_device_mappings": [
								{
									"device_name": "/dev/xvda",
									"ebs": {
										"delete_on_termination": "true",
										"encrypted":             "false",
										"iops":                  "3000",
										"snapshot_id":           "snap-09ce70c264d29cd82",
										"throughput":            "125",
										"volume_size":           "30",
										"volume_type":           "gp3",
									},
									"no_device":    "",
									"virtual_name": "",
								},
							],
							"boot_mode":        "uefi-preferred",
							"creation_date":    "2024-04-30T22:59:33.000Z",
							"deprecation_time": "2026-04-30T22:59:33.000Z",
							"description":      "Amazon Linux AMI 2023.0.20240430 x86_64 ECS HVM EBS",
							"ena_support":      true,
							"executable_users": null,
							"filter": [
								{
									"name": "architecture",
									"values": [
										"x86_64",
									],
								},
								{
									"name": "name",
									"values": [
										"al2023-ami-*",
									],
								},
								{
									"name": "root-device-type",
									"values": [
										"ebs",
									],
								},
								{
									"name": "virtualization-type",
									"values": [
										"hvm",
									],
								},
							],
							"hypervisor":         "xen",
							"id":                 "ami-00d4cdb3bda21c6ed",
							"image_id":           "ami-00d4cdb3bda21c6ed",
							"image_location":     "amazon/al2023-ami-ecs-hvm-2023.0.20240430-kernel-6.1-x86_64",
							"image_owner_alias":  "amazon",
							"image_type":         "machine",
							"imds_support":       "v2.0",
							"include_deprecated": false,
							"kernel_id":          "",
							"most_recent":        true,
							"name":               "al2023-ami-ecs-hvm-2023.0.20240430-kernel-6.1-x86_64",
							"name_regex":         null,
							"owner_id":           "591542846629",
							"owners": [
								"amazon",
							],
							"platform":          "",
							"platform_details":  "Linux/UNIX",
							"product_codes":     [],
							"public":            true,
							"ramdisk_id":        "",
							"root_device_name":  "/dev/xvda",
							"root_device_type":  "ebs",
							"root_snapshot_id":  "snap-09ce70c264d29cd82",
							"sriov_net_support": "simple",
							"state":             "available",
							"state_reason": {
								"code":    "UNSET",
								"message": "UNSET",
							},
							"tags":                {},
							"timeouts":            null,
							"tpm_support":         "",
							"usage_operation":     "RunInstances",
							"virtualization_type": "hvm",
						},
						"depends_on": [],
						"id":         "ami-00d4cdb3bda21c6ed",
						"tainted":    false,
					},
				},
			},
		},
		"path": [],
		"resources": {
			"aws_security_group": {
				"ssh-SG": {
					0: {
						"attr": {
							"arn":         "arn:aws:ec2:us-east-1:726096530699:security-group/sg-0faca5532460c107e",
							"description": "This security group will have rules for ssh connectivity",
							"egress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "allow all ip and ports outbound",
									"from_port":        0,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "-1",
									"security_groups":  [],
									"self":             false,
									"to_port":          0,
								},
							],
							"id": "sg-0faca5532460c107e",
							"ingress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "Allow port 22",
									"from_port":        22,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             false,
									"to_port":          22,
								},
							],
							"name":                   "SSH Sg",
							"name_prefix":            "",
							"owner_id":               "726096530699",
							"revoke_rules_on_delete": false,
							"tags":     {},
							"tags_all": {},
							"timeouts": null,
							"vpc_id":   "vpc-0114e4abbbce82497",
						},
						"depends_on": [],
						"id":         "sg-0faca5532460c107e",
						"tainted":    false,
					},
				},
				"web-SG": {
					0: {
						"attr": {
							"arn":         "arn:aws:ec2:us-east-1:726096530699:security-group/sg-0ff12ccf08f5623b8",
							"description": "This will enable web traffic",
							"egress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "allow all ip and ports outbound",
									"from_port":        0,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "-1",
									"security_groups":  [],
									"self":             false,
									"to_port":          0,
								},
							],
							"id": "sg-0ff12ccf08f5623b8",
							"ingress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "allow HTTPS",
									"from_port":        443,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             false,
									"to_port":          443,
								},
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "allow http",
									"from_port":        80,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             false,
									"to_port":          80,
								},
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description":      "allow port 8080",
									"from_port":        8080,
									"ipv6_cidr_blocks": [],
									"prefix_list_ids":  [],
									"protocol":         "tcp",
									"security_groups":  [],
									"self":             false,
									"to_port":          8080,
								},
							],
							"name":                   "WEB sg",
							"name_prefix":            "",
							"owner_id":               "726096530699",
							"revoke_rules_on_delete": false,
							"tags":     {},
							"tags_all": {},
							"timeouts": null,
							"vpc_id":   "vpc-0114e4abbbce82497",
						},
						"depends_on": [],
						"id":         "sg-0ff12ccf08f5623b8",
						"tainted":    false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.8.2"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
